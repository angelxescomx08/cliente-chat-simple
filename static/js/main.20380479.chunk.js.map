{"version":3,"sources":["components/chat/chat.jsx","components/Nav/nav.jsx","components/login/login.jsx","App.js","index.js"],"names":["socket","Nav","className","to","Login","useState","usuario","setUsuario","type","placeholder","onChange","event","target","value","enviarMensage","destino","msg","emit","Chat","location","ENDPOINT","list","createRef","setDestino","setMsg","mensajes","setMensajes","conectados","setConectados","useEffect","io","queryString","parse","search","on","usuarios","oldArray","off","name","ref","map","user","index","text","length","undefined","onKeyDown","key","current","onClick","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAKIA,E,+DCaWC,EAdH,WACR,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKA,UAAU,MAAf,SACI,oBAAIA,UAAU,SAAd,SACI,oBAAIA,UAAU,SAAd,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,OAAvB,4B,QCSTE,G,MAfD,WACV,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,OACI,sBAAKL,UAAU,kBAAf,UACI,oBAAIA,UAAU,SAAd,mBACA,uBAAOA,UAAU,QAAQM,KAAK,OAAOC,YAAY,UAAUC,SAAU,SAACC,GAClEJ,EAAWI,EAAMC,OAAOC,UAE5B,cAAC,IAAD,CAAMV,GAAE,wBAAmBG,GAA3B,SACI,wBAAQJ,UAAU,SAASM,KAAK,SAAhC,4B,0CFNVM,G,OAAgB,SAACd,EAAQM,EAASS,EAASC,GAC7ChB,EAAOiB,KAAK,SAAS,CACjB,QAAWX,EACX,QAAWS,EACX,IAAOC,MA4FAE,EAxFF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAENC,EAAW,8CACXC,EAAOC,sBACb,EAA8BjB,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,qBAA9B,mBAAOU,EAAP,KAAgBQ,EAAhB,KACA,EAAsBlB,qBAAtB,mBAAOW,EAAP,KAAYQ,EAAZ,KACA,EAAgCnB,mBAAS,IAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAmCrB,mBAAS,IAA5C,mBAAOsB,EAAP,KAAkBC,EAAlB,KAmBA,OAlBAC,qBAAU,WACN7B,EAAS8B,IAAGV,GACZ,IAAQd,EAAYyB,IAAYC,MAAMb,EAASc,QAAvC3B,QAYR,OAXAC,EAAWD,GACXN,EAAOiB,KAAK,UAAW,CAAE,QAAWX,IACpCN,EAAOkC,GAAG,cAAa,SAACC,GACpBP,EAAcO,MAElBnC,EAAOkC,GAAG,WAAU,YAAkB,IAAhB5B,EAAe,EAAfA,QAAQU,EAAO,EAAPA,IAC1BU,GAAY,SAAAU,GAAQ,4BAAQA,GAAR,CAAiB,CACjC,KAAQ9B,EACR,KAAQU,WAGT,WACHhB,EAAOqC,SAEZ,CAACjB,EAAUD,IAEV,sBAAKjB,UAAU,iBAAf,UACI,qBAAIA,UAAU,SAAd,kBAA6BI,KAC7B,gCACI,sBAAMJ,UAAU,GAAhB,mCACA,wBAAQoC,KAAK,SAASC,IAAKlB,EAA3B,SAEQM,EAAWa,KAAI,SAACC,GACZ,OAAGA,IAAOnC,EAEF,wBAAmBO,MAAO4B,EAA1B,SAAiCA,GAApBA,GAGV,UAMvB,qBAAKvC,UAAU,qBAAf,SAEIuB,EAASe,KAAI,WAAgBE,GAAW,IAAxBD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,KAClB,OAAIA,EAAKC,OAAS,OACJC,IAAPJ,EACQ,uBAAMvC,UAAU,UAAhB,UAA4CuC,EAA5C,KAAoDE,IAApD,UAAkCD,IAElC,uBAAMxC,UAAU,UAAhB,oBAAgDyC,IAAhD,UAAkCD,IAGtC,UAKnB,sBAAKxC,UAAU,kBAAf,UACI,uBAAOA,UAAU,gBAAgBM,KAAK,OAAOE,SAAU,SAACC,GACpDa,EAAOb,EAAMC,OAAOC,QACrBiC,UAAW,SAACnC,GACM,UAAdA,EAAMoC,MACLrB,GAAY,SAAAU,GAAQ,4BAAQA,GAAR,CAAiB,CACjC,QAAW9B,EACX,KAAQU,QAEZO,EAAWF,EAAK2B,QAAQnC,OACxBC,EAAcd,EAAOM,EAASS,EAASC,OAG/C,wBAAQd,UAAU,SAAS+C,QAAS,WAChCvB,GAAY,SAAAU,GAAQ,4BAAQA,GAAR,CAAiB,CACjC,QAAW9B,EACX,KAAQU,QAEZO,EAAWF,EAAK2B,QAAQnC,OACxBC,EAAcd,EAAOM,EAAQS,EAAQC,IANzC,6B,OGpELkC,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAQC,UAAWnC,W,OCT7CoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.20380479.chunk.js","sourcesContent":["import { createRef, useEffect, useState } from 'react'\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\nimport './chat.css'\r\n\r\nlet socket;\r\n\r\nconst enviarMensage = (socket, usuario, destino, msg)=>{\r\n    socket.emit('enviar',{\r\n        \"usuario\": usuario,\r\n        \"destino\": destino,\r\n        \"msg\": msg\r\n    })\r\n}\r\n\r\nconst Chat = ({ location }) => {\r\n    //const ENDPOINT = 'http://localhost:5000'\r\n    const ENDPOINT = 'https://servidor-chat-simple.herokuapp.com/'\r\n    const list = createRef()\r\n    const [usuario, setUsuario] = useState()\r\n    const [destino, setDestino] = useState()\r\n    const [msg, setMsg] = useState()\r\n    const [mensajes, setMensajes] = useState([])\r\n    const [conectados,setConectados] = useState([])\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)\r\n        const { usuario } = queryString.parse(location.search)\r\n        setUsuario(usuario)\r\n        socket.emit('usuario', { \"usuario\": usuario })\r\n        socket.on('conectados',(usuarios)=>{\r\n            setConectados(usuarios)\r\n        })\r\n        socket.on('recibir',({usuario,msg})=>{\r\n            setMensajes(oldArray => [...oldArray,{\r\n                \"user\": usuario,\r\n                \"text\": msg\r\n            }])\r\n        })\r\n        return () => {\r\n            socket.off()\r\n        }\r\n    }, [ENDPOINT, location])\r\n    return (\r\n        <div className=\"container-chat\">\r\n            <h2 className=\"tittle\">Chat {usuario}</h2>\r\n            <div>\r\n                <span className=\"\">Usuarios conectados: </span>\r\n                <select name=\"select\" ref={list}>\r\n                    {\r\n                        conectados.map((user)=>{\r\n                            if(user!==usuario){\r\n                                return(\r\n                                    <option key={user} value={user}>{user}</option>\r\n                                )\r\n                            }else{\r\n                                return null\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </select>\r\n                <div className=\"container-mensajes\">\r\n                { \r\n                    mensajes.map(({ user, text },index) => {\r\n                        if (text.length > 0) {\r\n                            if(user!==undefined){\r\n                                return <span className=\"mensaje\" key={`${index}`}>{user}: {text}</span>\r\n                            }else{\r\n                                return <span className=\"mensaje\" key={`${index}`}>TÃº: {text}</span>\r\n                            }\r\n                        }else{\r\n                            return null\r\n                        } \r\n                    })\r\n                }\r\n                </div>\r\n                <div className=\"container-input\">\r\n                    <input className=\"input-mensaje\" type=\"text\" onChange={(event) => {\r\n                        setMsg(event.target.value)\r\n                    }} onKeyDown={(event)=>{\r\n                        if(event.key === 'Enter'){\r\n                            setMensajes(oldArray => [...oldArray,{\r\n                                \"usuario\": usuario,\r\n                                \"text\": msg\r\n                            }] )\r\n                            setDestino(list.current.value)\r\n                            enviarMensage(socket,usuario, destino, msg)\r\n                        }\r\n                    }}/>\r\n                    <button className=\"button\" onClick={() => {\r\n                        setMensajes(oldArray => [...oldArray,{\r\n                            \"usuario\": usuario,\r\n                            \"text\": msg\r\n                        }] )\r\n                        setDestino(list.current.value)\r\n                        enviarMensage(socket,usuario,destino,msg)\r\n                    }}>Enter</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import { Link } from 'react-router-dom'\r\n\r\nimport './nav.css'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <ul className=\"nav-ul\">\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/\" className=\"link\">Login</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav","import {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './login.css'\r\n\r\nconst Login = () => {\r\n    const [usuario,setUsuario] = useState('')\r\n    return (\r\n        <div className=\"container-login\">\r\n            <h2 className=\"tittle\">Login</h2>\r\n            <input className=\"input\" type=\"text\" placeholder=\"usuario\" onChange={(event)=>{\r\n                setUsuario(event.target.value)\r\n            }}/>\r\n            <Link to={`/chat?usuario=${usuario}`}>\r\n                <button className=\"button\" type=\"submit\">Aceptar</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from './components/Nav/nav';\nimport Login from './components/login/login';\nimport Chat from './components/chat/chat';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route exact path=\"/chat\" component={Chat} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}