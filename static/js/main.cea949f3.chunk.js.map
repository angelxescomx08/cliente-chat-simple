{"version":3,"sources":["components/chat/chat.jsx","components/Nav/nav.jsx","components/login/login.jsx","App.js","index.js"],"names":["socket","Nav","className","to","Login","useState","usuario","setUsuario","type","placeholder","onChange","event","target","value","enviarMensage","destino","msg","emit","Chat","location","setDestino","setMsg","mensajes","setMensajes","conectados","setConectados","ultimoMensaje","setUltimoMensaje","useEffect","io","queryString","parse","search","on","usuarios","arrDestinos","filter","item","length","sender","oldArray","off","name","map","user","index","receiver","text","onKeyDown","key","onClick","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea949f3.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\nimport './chat.css'\r\n\r\nlet socket;\r\n\r\nconst enviarMensage = (socket, usuario, destino, msg) => {\r\n    socket.emit('enviar', {\r\n        \"usuario\": usuario,\r\n        \"destino\": destino,\r\n        \"msg\": msg\r\n    })\r\n}\r\n\r\nconst Chat = ({ location }) => {\r\n    //const ENDPOINT = 'http://localhost:5000'\r\n    const ENDPOINT = 'https://servidor-chat-simple.herokuapp.com/'\r\n    const [usuario, setUsuario] = useState()\r\n    const [destino, setDestino] = useState()\r\n    const [msg, setMsg] = useState()\r\n    const [mensajes, setMensajes] = useState([])\r\n    const [conectados, setConectados] = useState([])\r\n    const [ultimoMensaje,setUltimoMensaje] = useState('')\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)\r\n        const { usuario } = queryString.parse(location.search)\r\n        setUsuario(usuario)\r\n        socket.emit('usuario', { \"usuario\": usuario })\r\n        socket.on('conectados', (usuarios) => {\r\n            const arrDestinos = usuarios.filter(item => item !== usuario)\r\n            setConectados(arrDestinos)\r\n            if (arrDestinos.length > 0) { setDestino(arrDestinos[0]) }\r\n        })\r\n        socket.on('recibir', ({ sender, msg }) => {\r\n            setMensajes(oldArray => [...oldArray, {\r\n                \"sender\": sender,\r\n                \"receiver\": usuario,\r\n                \"text\": msg\r\n            }])\r\n            setUltimoMensaje(`Nuevo mensaje de ${sender}`)\r\n        })\r\n        return () => {\r\n            socket.off()\r\n        }\r\n    }, [location])\r\n    return (\r\n        <div className=\"container-chat\">\r\n            <h2 className=\"tittle\">Chat {usuario}</h2>\r\n            <div>\r\n                <span className=\"notificacion\">Usuarios conectados:</span>\r\n                {\r\n                    conectados.length > 0 ?\r\n                        <select name=\"select\" value={destino} onChange={event => {\r\n                            setDestino(event.target.value)\r\n                        }\r\n                        }>\r\n                            {\r\n                                conectados.map((user) => {\r\n                                    return <option key={user} value={user}>{user}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        : null\r\n                }\r\n                <br/><span className=\"notificacion\">{ultimoMensaje!==''?`${ultimoMensaje}`:null}</span>\r\n                <div className=\"container-mensajes\">\r\n                    {\r\n                        mensajes.map(({ sender, receiver, text }, index) => {\r\n                            if (destino === sender || destino === receiver) {\r\n                                return <span className=\"mensaje\" key={`${index}${sender}`}>\r\n                                    {sender === usuario ? `TÃº: ${text}` : `${sender}: ${text}`}</span>\r\n                            }else{\r\n                                return null\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"container-input\">\r\n                    <input className=\"input-mensaje\" type=\"text\" onChange={(event) => {\r\n                        setMsg(event.target.value)\r\n                    }} onKeyDown={(event) => {\r\n                        if (event.key === 'Enter') {\r\n                            setMensajes(oldArray => [...oldArray, {\r\n                                \"sender\": usuario,\r\n                                \"receiver\": destino,\r\n                                \"text\": msg\r\n                            }])\r\n                            enviarMensage(socket, usuario, destino, msg)\r\n                        }\r\n                    }} />\r\n                    <button className=\"button\" onClick={() => {\r\n                        setMensajes(oldArray => [...oldArray, {\r\n                            \"sender\": usuario,\r\n                            \"receiver\": destino,\r\n                            \"text\": msg\r\n                        }])\r\n                        enviarMensage(socket, usuario, destino, msg)\r\n                    }}>Enter</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import { Link } from 'react-router-dom'\r\n\r\nimport './nav.css'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <ul className=\"nav-ul\">\r\n                    <li className=\"nav-li\">\r\n                        <Link to=\"/cliente-chat-simple\" className=\"link\">Login</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav","import {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './login.css'\r\n\r\nconst Login = () => {\r\n    const [usuario,setUsuario] = useState('')\r\n    return (\r\n        <div className=\"container-login\">\r\n            <h2 className=\"tittle\">Login</h2>\r\n            <input className=\"input\" type=\"text\" placeholder=\"usuario\" onChange={(event)=>{\r\n                setUsuario(event.target.value)\r\n            }}/>\r\n            <Link to={`/chat?usuario=${usuario}`}>\r\n                <button className=\"button\" type=\"submit\">Aceptar</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from './components/Nav/nav';\nimport Login from './components/login/login';\nimport Chat from './components/chat/chat';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/cliente-chat-simple\">\n          <Login />\n        </Route>\n        <Route exact path=\"/chat\" component={Chat} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}